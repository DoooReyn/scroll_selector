#include "ScrollSelector.h"


using namespace std;
USING_NS_CC;


bool ScrollSelector::init()
{
    return true;
}



void ScrollSelector::initListener()
{
    auto listener = EventListenerTouchOneByOne::create();
    listener->onTouchBegan = [this](Touch* touch, Event* event) {
        return true;
    };

    listener->onTouchMoved = [this](Touch* touch, Event* event) {
        float disX = touch->getDelta().x;
        for(auto i : m_nodes)
            i->setPositionX(i->getPositionX() + disX);
    };

    listener->onTouchEnded = [this](Touch* touch, Event* event) {

        float startDistance = touch->getLocation().distance(touch->getStartLocation());
        Vec2 clipLayerMidPoint = this->getContentSize() * 0.5f;

        bool clickFlag = false;
        int cnt = 0;

        if(startDistance < 10) // click
        {
            float minDis = 0.0f;

            for(auto i : m_nodes) {
                Vec2 point = m_pCardClipLayer->convertToNodeSpace(touch->getLocation());
                if( i->getBoundingBox().containsPoint(point)) {
                    minDis = clipLayerMidPoint.x - i->getPositionX();
                    clickFlag = true;
                    m_iCurrentFashionIndex = cnt;
                    break;
                }
                cnt ++;
            }

            if(clickFlag)
                for(auto i : m_nodes)
                    i->runAction(MoveBy::create(0.3f, Vec2(minDis, 0)));
        }

        if(!clickFlag) {
            float minDis = 0;
            if(! m_nodes.empty())
                minDis = clipLayerMidPoint.x - m_nodes[0]->getPositionX();
            m_iCurrentFashionIndex = 0;

            cnt = 0;

            for(auto i : m_nodes) {
                if(abs(clipLayerMidPoint.x - i->getPositionX()) < abs(minDis)) {
                    minDis = clipLayerMidPoint.x - i->getPositionX();
                    m_iCurrentFashionIndex = cnt;
                }
                cnt ++;
            }

            for(auto i : m_nodes)
                i->runAction(MoveBy::create(0.3f, Vec2(minDis, 0)));
        }

        updateCurrentIndexChanged();
    };

    _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, m_pCardClipLayer);
}

void ScrollSelector::update(float dt)
{
    Vec2 clipLayerMidPoint = this->getContentSize() * 0.5f;
    for(auto i : m_nodes) {
        float width = i->getContentSize().width;
        float distance = abs(clipLayerMidPoint.x - i->getPositionX());
        float scale = maxScale -  distance * 0.07f / (width * 0.52);
        if(scale < 0.45)
            scale = 0.45;
        i->setScale(scale);
    }
}

void ScrollSelector::updateCurrentIndexChanged()
{
}



